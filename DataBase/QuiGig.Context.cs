//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuiGigAPI.DataBase
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class QuiGigAPIEntities : DbContext
    {
        public QuiGigAPIEntities()
            : base("name=QuiGigAPIEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Activity> Activities { get; set; }
        public virtual DbSet<AllowFileMaxNumber> AllowFileMaxNumbers { get; set; }
        public virtual DbSet<AllowFileMaxSize> AllowFileMaxSizes { get; set; }
        public virtual DbSet<AllowFileType> AllowFileTypes { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<CityDetailMaster> CityDetailMasters { get; set; }
        public virtual DbSet<CityMaster> CityMasters { get; set; }
        public virtual DbSet<CityServiceDetail> CityServiceDetails { get; set; }
        public virtual DbSet<CityService> CityServices { get; set; }
        public virtual DbSet<CityZipCode> CityZipCodes { get; set; }
        public virtual DbSet<CM> CMS { get; set; }
        public virtual DbSet<CoinbaseChargeCreation> CoinbaseChargeCreations { get; set; }
        public virtual DbSet<Complaint> Complaints { get; set; }
        public virtual DbSet<ComplaintReply> ComplaintReplies { get; set; }
        public virtual DbSet<ContactUsDetail> ContactUsDetails { get; set; }
        public virtual DbSet<ContentManagerICO> ContentManagerICOes { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<CountryMaster> CountryMasters { get; set; }
        public virtual DbSet<CurrencyDefination> CurrencyDefinations { get; set; }
        public virtual DbSet<CustomerTravellingArea> CustomerTravellingAreas { get; set; }
        public virtual DbSet<DeactivatedAccount> DeactivatedAccounts { get; set; }
        public virtual DbSet<Duration> Durations { get; set; }
        public virtual DbSet<Feature> Features { get; set; }
        public virtual DbSet<FileUploadSetting> FileUploadSettings { get; set; }
        public virtual DbSet<GroupMember> GroupMembers { get; set; }
        public virtual DbSet<Hired> Hireds { get; set; }
        public virtual DbSet<HiredHistory> HiredHistories { get; set; }
        public virtual DbSet<InvitedUser> InvitedUsers { get; set; }
        public virtual DbSet<JobOptionAttachment> JobOptionAttachments { get; set; }
        public virtual DbSet<JobQuestionOption> JobQuestionOptions { get; set; }
        public virtual DbSet<Job> Jobs { get; set; }
        public virtual DbSet<LocationMaster> LocationMasters { get; set; }
        public virtual DbSet<ManageCampain> ManageCampains { get; set; }
        public virtual DbSet<Message> Messages { get; set; }
        public virtual DbSet<MessageGroup> MessageGroups { get; set; }
        public virtual DbSet<MessageGroupMember> MessageGroupMembers { get; set; }
        public virtual DbSet<MessageReport> MessageReports { get; set; }
        public virtual DbSet<NewsLetterSubscribe> NewsLetterSubscribes { get; set; }
        public virtual DbSet<NoServiceFound> NoServiceFounds { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
        public virtual DbSet<NotificationCategory> NotificationCategories { get; set; }
        public virtual DbSet<OptionControl> OptionControls { get; set; }
        public virtual DbSet<OrderForm> OrderForms { get; set; }
        public virtual DbSet<OrderFormQuestion> OrderFormQuestions { get; set; }
        public virtual DbSet<OrderFormQuestionSelected> OrderFormQuestionSelecteds { get; set; }
        public virtual DbSet<ParameterSetting> ParameterSettings { get; set; }
        public virtual DbSet<PaymentSubscription> PaymentSubscriptions { get; set; }
        public virtual DbSet<PlanDuration> PlanDurations { get; set; }
        public virtual DbSet<PlanDurationFeature> PlanDurationFeatures { get; set; }
        public virtual DbSet<PlanRole> PlanRoles { get; set; }
        public virtual DbSet<ProposalHistory> ProposalHistories { get; set; }
        public virtual DbSet<Proposal> Proposals { get; set; }
        public virtual DbSet<QuestionMaster> QuestionMasters { get; set; }
        public virtual DbSet<QuestionOption> QuestionOptions { get; set; }
        public virtual DbSet<QuestionType> QuestionTypes { get; set; }
        public virtual DbSet<Quig> Quigs { get; set; }
        public virtual DbSet<QuigsPackage> QuigsPackages { get; set; }
        public virtual DbSet<Refund> Refunds { get; set; }
        public virtual DbSet<ReviewRating> ReviewRatings { get; set; }
        public virtual DbSet<Right> Rights { get; set; }
        public virtual DbSet<RoleNotification> RoleNotifications { get; set; }
        public virtual DbSet<SalesEntry> SalesEntries { get; set; }
        public virtual DbSet<SavedOrder> SavedOrders { get; set; }
        public virtual DbSet<SeeLowestBid> SeeLowestBids { get; set; }
        public virtual DbSet<ServiceQuestion> ServiceQuestions { get; set; }
        public virtual DbSet<Service> Services { get; set; }
        public virtual DbSet<StateMaster> StateMasters { get; set; }
        public virtual DbSet<SubscriptionPlan> SubscriptionPlans { get; set; }
        public virtual DbSet<TimeZone> TimeZones { get; set; }
        public virtual DbSet<UserAddress> UserAddresses { get; set; }
        public virtual DbSet<UserBankAccount> UserBankAccounts { get; set; }
        public virtual DbSet<UserBidHistory> UserBidHistories { get; set; }
        public virtual DbSet<UserBusinessDetail> UserBusinessDetails { get; set; }
        public virtual DbSet<UserCertification> UserCertifications { get; set; }
        public virtual DbSet<UserDebitCard> UserDebitCards { get; set; }
        public virtual DbSet<UserDetail> UserDetails { get; set; }
        public virtual DbSet<UserDoc> UserDocs { get; set; }
        public virtual DbSet<UserEducation> UserEducations { get; set; }
        public virtual DbSet<UserExperience> UserExperiences { get; set; }
        public virtual DbSet<UserICOWallet> UserICOWallets { get; set; }
        public virtual DbSet<UserLicence> UserLicences { get; set; }
        public virtual DbSet<UserNotification> UserNotifications { get; set; }
        public virtual DbSet<UserPayment> UserPayments { get; set; }
        public virtual DbSet<UserPlan> UserPlans { get; set; }
        public virtual DbSet<UserPlanHistory> UserPlanHistories { get; set; }
        public virtual DbSet<UserPortfolio> UserPortfolios { get; set; }
        public virtual DbSet<UserRight> UserRights { get; set; }
        public virtual DbSet<UserRolePlan> UserRolePlans { get; set; }
        public virtual DbSet<UserServiceArea> UserServiceAreas { get; set; }
        public virtual DbSet<UserService> UserServices { get; set; }
        public virtual DbSet<UserWallet> UserWallets { get; set; }
        public virtual DbSet<WhitePaper> WhitePapers { get; set; }
        public virtual DbSet<CityServicesTemp> CityServicesTemps { get; set; }
        public virtual DbSet<StateServiceMap> StateServiceMaps { get; set; }
    
        public virtual ObjectResult<string> GetActiveUserChat(Nullable<long> jobId, string userId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("jobId", jobId) :
                new ObjectParameter("jobId", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetActiveUserChat", jobIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<GetAllConnectedUserList_Result3> GetAllConnectedUserList(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllConnectedUserList_Result3>("GetAllConnectedUserList", userIdParameter);
        }
    
        public virtual ObjectResult<string> GetChildServiceByCity(string stateName, string cityName, string parentServiceName)
        {
            var stateNameParameter = stateName != null ?
                new ObjectParameter("stateName", stateName) :
                new ObjectParameter("stateName", typeof(string));
    
            var cityNameParameter = cityName != null ?
                new ObjectParameter("cityName", cityName) :
                new ObjectParameter("cityName", typeof(string));
    
            var parentServiceNameParameter = parentServiceName != null ?
                new ObjectParameter("parentServiceName", parentServiceName) :
                new ObjectParameter("parentServiceName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetChildServiceByCity", stateNameParameter, cityNameParameter, parentServiceNameParameter);
        }
    
        public virtual ObjectResult<GetCityDetail_Result3> GetCityDetail(string cityName, string stateName, string serviceName)
        {
            var cityNameParameter = cityName != null ?
                new ObjectParameter("cityName", cityName) :
                new ObjectParameter("cityName", typeof(string));
    
            var stateNameParameter = stateName != null ?
                new ObjectParameter("stateName", stateName) :
                new ObjectParameter("stateName", typeof(string));
    
            var serviceNameParameter = serviceName != null ?
                new ObjectParameter("serviceName", serviceName) :
                new ObjectParameter("serviceName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCityDetail_Result3>("GetCityDetail", cityNameParameter, stateNameParameter, serviceNameParameter);
        }
    
        public virtual ObjectResult<GetConnectedUserByJobId_Result3> GetConnectedUserByJobId(Nullable<long> jobId, string userId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("jobId", jobId) :
                new ObjectParameter("jobId", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetConnectedUserByJobId_Result3>("GetConnectedUserByJobId", jobIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<GetCurrentOrderList_Result3> GetCurrentOrderList(string userId, string userType, string searchKeyword)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("userType", userType) :
                new ObjectParameter("userType", typeof(string));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("searchKeyword", searchKeyword) :
                new ObjectParameter("searchKeyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCurrentOrderList_Result3>("GetCurrentOrderList", userIdParameter, userTypeParameter, searchKeywordParameter);
        }
    
        public virtual ObjectResult<GetExistingPostedOrderList_Result3> GetExistingPostedOrderList(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExistingPostedOrderList_Result3>("GetExistingPostedOrderList", userIdParameter);
        }
    
        public virtual ObjectResult<GetExpireOrderList_Result3> GetExpireOrderList(string userId, string searchKeyword)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("searchKeyword", searchKeyword) :
                new ObjectParameter("searchKeyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExpireOrderList_Result3>("GetExpireOrderList", userIdParameter, searchKeywordParameter);
        }
    
        public virtual ObjectResult<GetJobDetail_Result3> GetJobDetail(Nullable<long> jobId, string toUserId, string fromUserId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("jobId", jobId) :
                new ObjectParameter("jobId", typeof(long));
    
            var toUserIdParameter = toUserId != null ?
                new ObjectParameter("toUserId", toUserId) :
                new ObjectParameter("toUserId", typeof(string));
    
            var fromUserIdParameter = fromUserId != null ?
                new ObjectParameter("fromUserId", fromUserId) :
                new ObjectParameter("fromUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetJobDetail_Result3>("GetJobDetail", jobIdParameter, toUserIdParameter, fromUserIdParameter);
        }
    
        public virtual ObjectResult<GetLatestOrderList_Result3> GetLatestOrderList(string userId, string userType, string searchKeyword)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("userType", userType) :
                new ObjectParameter("userType", typeof(string));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("searchKeyword", searchKeyword) :
                new ObjectParameter("searchKeyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLatestOrderList_Result3>("GetLatestOrderList", userIdParameter, userTypeParameter, searchKeywordParameter);
        }
    
        public virtual ObjectResult<GetMessageChatWithUser_Result3> GetMessageChatWithUser(Nullable<long> jobId, Nullable<long> proposalId, string toUserId, string fromUserId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("jobId", jobId) :
                new ObjectParameter("jobId", typeof(long));
    
            var proposalIdParameter = proposalId.HasValue ?
                new ObjectParameter("proposalId", proposalId) :
                new ObjectParameter("proposalId", typeof(long));
    
            var toUserIdParameter = toUserId != null ?
                new ObjectParameter("toUserId", toUserId) :
                new ObjectParameter("toUserId", typeof(string));
    
            var fromUserIdParameter = fromUserId != null ?
                new ObjectParameter("fromUserId", fromUserId) :
                new ObjectParameter("fromUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMessageChatWithUser_Result3>("GetMessageChatWithUser", jobIdParameter, proposalIdParameter, toUserIdParameter, fromUserIdParameter);
        }
    
        public virtual ObjectResult<GetMessageNotification_Result3> GetMessageNotification(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMessageNotification_Result3>("GetMessageNotification", userIdParameter);
        }
    
        public virtual ObjectResult<GetMyBidList_Result4> GetMyBidList(string userId, string userType, string bidType, string searchKeyword)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("userType", userType) :
                new ObjectParameter("userType", typeof(string));
    
            var bidTypeParameter = bidType != null ?
                new ObjectParameter("bidType", bidType) :
                new ObjectParameter("bidType", typeof(string));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("searchKeyword", searchKeyword) :
                new ObjectParameter("searchKeyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMyBidList_Result4>("GetMyBidList", userIdParameter, userTypeParameter, bidTypeParameter, searchKeywordParameter);
        }
    
        public virtual ObjectResult<GetMyGigList_Result5> GetMyGigList(string userId, string userType, string bidType, string searchKeyword)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("userType", userType) :
                new ObjectParameter("userType", typeof(string));
    
            var bidTypeParameter = bidType != null ?
                new ObjectParameter("bidType", bidType) :
                new ObjectParameter("bidType", typeof(string));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("searchKeyword", searchKeyword) :
                new ObjectParameter("searchKeyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMyGigList_Result5>("GetMyGigList", userIdParameter, userTypeParameter, bidTypeParameter, searchKeywordParameter);
        }
    
        public virtual ObjectResult<GetNearService_Result3> GetNearService(string cityName, string stateName)
        {
            var cityNameParameter = cityName != null ?
                new ObjectParameter("cityName", cityName) :
                new ObjectParameter("cityName", typeof(string));
    
            var stateNameParameter = stateName != null ?
                new ObjectParameter("stateName", stateName) :
                new ObjectParameter("stateName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNearService_Result3>("GetNearService", cityNameParameter, stateNameParameter);
        }
    
        public virtual ObjectResult<GetNewOrderList_Result3> GetNewOrderList(string userId, string userType, string searchKeyword)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("userType", userType) :
                new ObjectParameter("userType", typeof(string));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("searchKeyword", searchKeyword) :
                new ObjectParameter("searchKeyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNewOrderList_Result3>("GetNewOrderList", userIdParameter, userTypeParameter, searchKeywordParameter);
        }
    
        public virtual ObjectResult<string> GetOtherSPCityList(Nullable<long> serviceId, string city)
        {
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("serviceId", serviceId) :
                new ObjectParameter("serviceId", typeof(long));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetOtherSPCityList", serviceIdParameter, cityParameter);
        }
    
        public virtual ObjectResult<string> GetParentServiceByCity(string stateName, string cityName)
        {
            var stateNameParameter = stateName != null ?
                new ObjectParameter("stateName", stateName) :
                new ObjectParameter("stateName", typeof(string));
    
            var cityNameParameter = cityName != null ?
                new ObjectParameter("cityName", cityName) :
                new ObjectParameter("cityName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetParentServiceByCity", stateNameParameter, cityNameParameter);
        }
    
        public virtual ObjectResult<GetPastOrderList_Result3> GetPastOrderList(string userId, string userType, string searchKeyword)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("userType", userType) :
                new ObjectParameter("userType", typeof(string));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("searchKeyword", searchKeyword) :
                new ObjectParameter("searchKeyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPastOrderList_Result3>("GetPastOrderList", userIdParameter, userTypeParameter, searchKeywordParameter);
        }
    
        public virtual ObjectResult<GetPopularSPById_Result3> GetPopularSPById(Nullable<long> serviceId, string city)
        {
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("serviceId", serviceId) :
                new ObjectParameter("serviceId", typeof(long));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPopularSPById_Result3>("GetPopularSPById", serviceIdParameter, cityParameter);
        }
    
        public virtual ObjectResult<GetProposalUserList_Result5> GetProposalUserList(Nullable<long> jobId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("jobId", jobId) :
                new ObjectParameter("jobId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProposalUserList_Result5>("GetProposalUserList", jobIdParameter);
        }
    
        public virtual ObjectResult<GetQuestionServiceList_Result3> GetQuestionServiceList(string searchKey)
        {
            var searchKeyParameter = searchKey != null ?
                new ObjectParameter("searchKey", searchKey) :
                new ObjectParameter("searchKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetQuestionServiceList_Result3>("GetQuestionServiceList", searchKeyParameter);
        }
    
        public virtual ObjectResult<GetReviewRatingList_Result3> GetReviewRatingList(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetReviewRatingList_Result3>("GetReviewRatingList", userIdParameter);
        }
    
        public virtual ObjectResult<GetSavedOrderList_Result3> GetSavedOrderList(string userId, string searchKeyword)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            var searchKeywordParameter = searchKeyword != null ?
                new ObjectParameter("searchKeyword", searchKeyword) :
                new ObjectParameter("searchKeyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSavedOrderList_Result3>("GetSavedOrderList", userIdParameter, searchKeywordParameter);
        }
    
        public virtual ObjectResult<GetStartMessageChatWithUser_Result3> GetStartMessageChatWithUser(Nullable<long> jobId, Nullable<long> proposalId, string toUserId, string fromUserId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("jobId", jobId) :
                new ObjectParameter("jobId", typeof(long));
    
            var proposalIdParameter = proposalId.HasValue ?
                new ObjectParameter("proposalId", proposalId) :
                new ObjectParameter("proposalId", typeof(long));
    
            var toUserIdParameter = toUserId != null ?
                new ObjectParameter("toUserId", toUserId) :
                new ObjectParameter("toUserId", typeof(string));
    
            var fromUserIdParameter = fromUserId != null ?
                new ObjectParameter("fromUserId", fromUserId) :
                new ObjectParameter("fromUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStartMessageChatWithUser_Result3>("GetStartMessageChatWithUser", jobIdParameter, proposalIdParameter, toUserIdParameter, fromUserIdParameter);
        }
    
        public virtual ObjectResult<GetUserDetailById_Result3> GetUserDetailById(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserDetailById_Result3>("GetUserDetailById", userIdParameter);
        }
    
        public virtual ObjectResult<GetUserList_Result3> GetUserList(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string name, string email)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserList_Result3>("GetUserList", fromDateParameter, toDateParameter, nameParameter, emailParameter);
        }
    
        public virtual ObjectResult<GetUserMessageList_Result3> GetUserMessageList(Nullable<long> jobId, string fromId, string toUserId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("jobId", jobId) :
                new ObjectParameter("jobId", typeof(long));
    
            var fromIdParameter = fromId != null ?
                new ObjectParameter("fromId", fromId) :
                new ObjectParameter("fromId", typeof(string));
    
            var toUserIdParameter = toUserId != null ?
                new ObjectParameter("toUserId", toUserId) :
                new ObjectParameter("toUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserMessageList_Result3>("GetUserMessageList", jobIdParameter, fromIdParameter, toUserIdParameter);
        }
    
        public virtual ObjectResult<MessageChat_Result3> MessageChat(Nullable<long> jobId, Nullable<long> proposalId, string toUserId, string fromUserId)
        {
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("jobId", jobId) :
                new ObjectParameter("jobId", typeof(long));
    
            var proposalIdParameter = proposalId.HasValue ?
                new ObjectParameter("proposalId", proposalId) :
                new ObjectParameter("proposalId", typeof(long));
    
            var toUserIdParameter = toUserId != null ?
                new ObjectParameter("toUserId", toUserId) :
                new ObjectParameter("toUserId", typeof(string));
    
            var fromUserIdParameter = fromUserId != null ?
                new ObjectParameter("fromUserId", fromUserId) :
                new ObjectParameter("fromUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MessageChat_Result3>("MessageChat", jobIdParameter, proposalIdParameter, toUserIdParameter, fromUserIdParameter);
        }
    
        public virtual ObjectResult<proc_AdminQuigsStats_Result3> proc_AdminQuigsStats()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_AdminQuigsStats_Result3>("proc_AdminQuigsStats");
        }
    
        public virtual ObjectResult<proc_GigsSaleReport_Result3> proc_GigsSaleReport(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> toDate, string quigsStatus, string domain)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var quigsStatusParameter = quigsStatus != null ?
                new ObjectParameter("QuigsStatus", quigsStatus) :
                new ObjectParameter("QuigsStatus", typeof(string));
    
            var domainParameter = domain != null ?
                new ObjectParameter("Domain", domain) :
                new ObjectParameter("Domain", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_GigsSaleReport_Result3>("proc_GigsSaleReport", dateFromParameter, toDateParameter, quigsStatusParameter, domainParameter);
        }
    
        public virtual int proc_InsertCityZipcode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_InsertCityZipcode");
        }
    
        public virtual int Proc_SetUserDefaultNotifications(string userId, string userType)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_SetUserDefaultNotifications", userIdParameter, userTypeParameter);
        }
    
        public virtual int proc_UpdateServiceImgName()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_UpdateServiceImgName");
        }
    
        [DbFunction("QuiGigAPIEntities", "SplitString")]
        public virtual IQueryable<string> SplitString(string input, string character)
        {
            var inputParameter = input != null ?
                new ObjectParameter("Input", input) :
                new ObjectParameter("Input", typeof(string));
    
            var characterParameter = character != null ?
                new ObjectParameter("Character", character) :
                new ObjectParameter("Character", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[QuiGigAPIEntities].[SplitString](@Input, @Character)", inputParameter, characterParameter);
        }
    }
}
